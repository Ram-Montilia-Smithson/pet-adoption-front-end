[{"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"1","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"2","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"3","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"4","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js":"5","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"6","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js":"7","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"8","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js":"9","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"10","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js":"11","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"12","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js":"13","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js":"14","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js":"15","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"16","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"17","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"18","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"19"},{"size":3293,"mtime":1624304680152,"results":"20","hashOfConfig":"21"},{"size":7644,"mtime":1624303564102,"results":"22","hashOfConfig":"21"},{"size":342,"mtime":1623586015351,"results":"23","hashOfConfig":"21"},{"size":2283,"mtime":1624307367610,"results":"24","hashOfConfig":"21"},{"size":379,"mtime":1624306772829,"results":"25","hashOfConfig":"21"},{"size":8729,"mtime":1624185549333,"results":"26","hashOfConfig":"21"},{"size":5332,"mtime":1624304685440,"results":"27","hashOfConfig":"21"},{"size":4408,"mtime":1624309053809,"results":"28","hashOfConfig":"21"},{"size":302,"mtime":1610225690999,"results":"29","hashOfConfig":"21"},{"size":6134,"mtime":1624168179607,"results":"30","hashOfConfig":"21"},{"size":47,"mtime":1610227833738,"results":"31","hashOfConfig":"21"},{"size":3059,"mtime":1624305872925,"results":"32","hashOfConfig":"21"},{"size":2240,"mtime":1624308916538,"results":"33","hashOfConfig":"21"},{"size":476,"mtime":1624309011843,"results":"34","hashOfConfig":"21"},{"size":1812,"mtime":1624309079541,"results":"35","hashOfConfig":"21"},{"size":6575,"mtime":1623605799564,"results":"36","hashOfConfig":"21"},{"size":2696,"mtime":1624307390231,"results":"37","hashOfConfig":"21"},{"size":1597,"mtime":1624308996924,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1607975660008,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"km5z9e",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",["84","85","86","87","88","89"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],["90","91"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",[],["92","93"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js",["94","95"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",["96"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js",[],["97","98"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",[],["99","100"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js",["101"],"import { Modal } from \"react-bootstrap\"\r\nimport React, { useEffect, useRef, useState } from \"react\"\r\nimport UserModal from \"./userModal\"\r\nimport { getPetById, getPets } from \"../lib/api\"\r\n\r\nconst User = ({ user }) => {\r\n    \r\n    const [savedPets, setSavedPets] = useState([])\r\n    const [usersPets, setUsersPets] = useState([])\r\n\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        getAllPets()\r\n        getSavedPets()\r\n    }, [])\r\n\r\n    // get pets by user id\r\n    const getAllPets = async () => {\r\n        const petArray = []\r\n        const pets = await getPets()\r\n        pets.forEach(pet => {\r\n            if (pet.ownerId === user._id) { petArray.push(pet) }\r\n        })\r\n        setUsersPets(petArray)\r\n    }\r\n\r\n    const getSavedPets = () => {\r\n        const petIDArray = user.savedPets\r\n        const petArray = []\r\n        setSavedPets(savedPets => [])\r\n        petIDArray.forEach(async (pet) => {\r\n            const savedPet = await getPetById(pet)\r\n            petArray.push(savedPet)\r\n            setSavedPets(savedPets => [...savedPets, savedPet])\r\n        })\r\n    }\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n    const openModal = () => { setIsModalOpen(true) }\r\n    const closeModal = () => { setIsModalOpen(false) }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center mb-4\" onClick={() => { openModal()}}>\r\n                {user.firstName} {user.lastName}\r\n                {user.admin ?\r\n                    <span> - Admin</span>\r\n                    :\r\n                    <span> - Owner</span>\r\n                }\r\n            </h2>\r\n            <Modal show={isModalOpen} onHide={closeModal} ref={ref}>\r\n                <UserModal user={user} pets={usersPets} savedPets={savedPets}/>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default User","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",["102"],"import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport { postUser } from \"../lib/api\";\r\nimport { UserContext } from '../context/context'\r\n\r\nexport default function Signup({ closeSignupModal }) {\r\n    \r\n    const userContext = useContext(UserContext)\r\n\r\n    const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [signupData, setSignupData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        tel: \"\",\r\n        bio: \"\",\r\n        admin: false,\r\n        pets: [],\r\n        login: true\r\n    });\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (signupData.password === confirmationPassword) {\r\n            const response = await postUser('http://localhost:5000/api/users/signup',signupData)\r\n            // console.log(signupData)\r\n            if (typeof response === \"string\") {\r\n                // console.log(response);\r\n                setError(`${response}`)\r\n            }\r\n            else {\r\n                // console.log(\"no Error\", response);\r\n                setSignupData({ firstName: \"\", lastName: \"\", password: \"\", email: \"\", tel: \"\", bio: \"\", admin: false, pets: [], login: true })\r\n                setConfirmationPassword(\"\")\r\n                userContext.user = response\r\n                setError(\"\")\r\n                closeSignupModal()\r\n            }\r\n        }\r\n        else {\r\n            setError(\"passwords do not match\")\r\n            // console.log(\"passwords do not match\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Title className=\"text-center mb-4\">Sign Up</Card.Title>\r\n                <Card.Body>\r\n                    <Form\r\n                        className=\"bg-light\"\r\n                        onSubmit={(event) => handleOnSubmit(event)}\r\n                        action=\"signup\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <Form.Group id=\"first-name\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, firstName: event.target.value })}\r\n                                value={signupData.firstName}\r\n                                required\r\n                                name=\"first name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"last-name\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, lastName: event.target.value })}\r\n                                value={signupData.lastName}\r\n                                required\r\n                                name=\"last name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phone-number\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Phone Number\"\r\n                                onChange={(event) => setSignupData({ ...signupData, tel: event.target.value })}\r\n                                value={signupData.tel}\r\n                                required\r\n                                name=\"tel\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={(event) => setSignupData({ ...signupData, email: event.target.value })}\r\n                                value={signupData.email}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"user-bio\">\r\n                            <Form.Label>Your Story</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"tell us about your self...\"\r\n                                onChange={(event) => setSignupData({ ...signupData, bio: event.target.value })}\r\n                                value={signupData.bio}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setSignupData({ ...signupData, password: event.target.value })}\r\n                                value={signupData.password}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setConfirmationPassword(event.target.value)}\r\n                                value={confirmationPassword}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <div className=\"text-danger bg-warning rounded my-2\">{error}</div>\r\n                        <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",["103"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],{"ruleId":"104","severity":1,"message":"105","line":7,"column":56,"nodeType":"106","messageId":"107","endLine":7,"endColumn":66},{"ruleId":"104","severity":1,"message":"108","line":10,"column":29,"nodeType":"106","messageId":"107","endLine":10,"endColumn":38},{"ruleId":"104","severity":1,"message":"109","line":11,"column":8,"nodeType":"106","messageId":"107","endLine":11,"endColumn":15},{"ruleId":"104","severity":1,"message":"110","line":12,"column":10,"nodeType":"106","messageId":"107","endLine":12,"endColumn":17},{"ruleId":"104","severity":1,"message":"111","line":12,"column":19,"nodeType":"106","messageId":"107","endLine":12,"endColumn":27},{"ruleId":"104","severity":1,"message":"112","line":20,"column":10,"nodeType":"106","messageId":"107","endLine":20,"endColumn":15},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":17,"column":8,"nodeType":"121","endLine":17,"endColumn":10,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":78,"column":72,"nodeType":"125","endLine":78,"endColumn":88},{"ruleId":"119","severity":1,"message":"126","line":17,"column":8,"nodeType":"121","endLine":17,"endColumn":10,"suggestions":"127"},{"ruleId":"113","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"126","line":16,"column":8,"nodeType":"121","endLine":16,"endColumn":10,"suggestions":"132"},{"ruleId":"104","severity":1,"message":"133","line":1,"column":29,"nodeType":"106","messageId":"107","endLine":1,"endColumn":35},{"ruleId":"104","severity":1,"message":"134","line":11,"column":11,"nodeType":"106","messageId":"107","endLine":11,"endColumn":22},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'EditPet' is defined but never used.","'getPets' is defined but never used.","'getUsers' is defined but never used.","'state' is assigned a value but never used.","no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pet'. Either include it or remove the dependency array. If 'setState' needs the current value of 'pet', you can also switch to useReducer instead of useState and read 'pet' in the reducer.","ArrayExpression",["137"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'getAllPets' and 'getSavedPets'. Either include them or remove the dependency array.",["138"],["135"],["136"],["135"],["136"],["139"],"'useRef' is defined but never used.","'userContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"142","fix":"144"},"Update the dependencies array to be: [pet]",{"range":"145","text":"146"},"Update the dependencies array to be: [getAllPets, getSavedPets]",{"range":"147","text":"148"},{"range":"149","text":"148"},[473,475],"[pet]",[562,564],"[getAllPets, getSavedPets]",[437,439]]