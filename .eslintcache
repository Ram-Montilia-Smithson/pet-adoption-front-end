[{"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js":"1","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"2","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"3","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"4","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"5","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"6","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"7","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-page.js":"8","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"9","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"10","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\admin.js":"11","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"12","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"13","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"14","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-results.js":"15","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"16"},{"size":517,"mtime":1607975660007,"results":"17","hashOfConfig":"18"},{"size":2670,"mtime":1609262030831,"results":"19","hashOfConfig":"18"},{"size":2250,"mtime":1609188336998,"results":"20","hashOfConfig":"18"},{"size":1326,"mtime":1607978194915,"results":"21","hashOfConfig":"18"},{"size":1996,"mtime":1608474155351,"results":"22","hashOfConfig":"18"},{"size":2382,"mtime":1608474865546,"results":"23","hashOfConfig":"18"},{"size":1347,"mtime":1608497584845,"results":"24","hashOfConfig":"18"},{"size":2154,"mtime":1608499766823,"results":"25","hashOfConfig":"18"},{"size":375,"mtime":1607975660008,"results":"26","hashOfConfig":"18"},{"size":6973,"mtime":1609160648495,"results":"27","hashOfConfig":"18"},{"size":875,"mtime":1608220813238,"results":"28","hashOfConfig":"18"},{"size":166,"mtime":1609162860057,"results":"29","hashOfConfig":"18"},{"size":7931,"mtime":1609264092367,"results":"30","hashOfConfig":"18"},{"size":1354,"mtime":1608224531682,"results":"31","hashOfConfig":"18"},{"size":1134,"mtime":1609081375559,"results":"32","hashOfConfig":"18"},{"size":1261,"mtime":1609265145836,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"nc3qmk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js",[],["74","75"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],["76","77"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",[],["78","79"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",[],["80","81"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-page.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],["82","83"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",["84","85","86"],"import React, { useState } from \"react\";\r\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\"\r\nimport SearchResults from \"./search-results\"\r\n\r\n\r\nexport default function Search() {\r\n\r\n    const [allPets, setAllPets] = useState({})\r\n    const [searchedPets, setSearchedPets] = useState([])\r\n    const [searchTypeBasic, setSearchTypeBasic] = useState(true);\r\n    const [searchData, setSearchData] = useState({})\r\n    // const [type, setType] = useState(\"dogs\")\r\n\r\n    // const handleBasicSearch = () => {\r\n    //     all\r\n    // }\r\n    \r\n    const handleTypeChange = (event) => {\r\n        if (event === 1) { setSearchData({ ...searchData, type: \"cat\" }) }\r\n        else { setSearchData({ ...searchData, type: \"dog\" }) }\r\n    };\r\n\r\n    const handleStatusChange = (event) => {\r\n        if (event === 1) { setSearchData({ ...searchData, status: \"fostered\" }) }\r\n        else if (event === 2) { setSearchData({ ...searchData, status: \"owned\" }) }\r\n        else { setSearchData({ ...searchData, status: \"sheltered\" }) }\r\n    };\r\n\r\n    // const handleAdvancedSearch = (event) => {\r\n    //     event.preventDefault();\r\n    //     let advancedPetArray = []\r\n    //     allPets.forEach((pet) => {\r\n    //         for (const value in searchData) {\r\n    //             for (const prop in pet) {\r\n    //                 if (pet[prop] === searchData && !advancedPetArray.includes(pet))\r\n    //                 { advancedPetArray.push(pet) }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     setSearchedPets(advancedPetArray)\r\n    //     console.log(advancedPetArray)\r\n    //     console.log(searchedPets)\r\n    //     setSearchData({ name: \"\", type: \"\", height: 0, weight: 0, status: \"\" })\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Search Page</h2>\r\n                    <Form\r\n                        className=\"bg-light\"\r\n                    // onSubmit={(event) => handleAdvancedSearch(event)}\r\n                    >\r\n                        <Button\r\n                            className=\"d-block m-auto\"\r\n                            onClick={() => setSearchTypeBasic(!searchTypeBasic)}\r\n                        >\r\n                            {!searchTypeBasic ? \"Basic\" : \"Advanced\"}\r\n                        </Button>\r\n                        Results of search (List of animal card components that link to the pet page)\r\n                        <Card.Title>{searchTypeBasic ? \"Basic\" : \"Advanced\"} Search Form:</Card.Title>\r\n                        {searchTypeBasic ?\r\n                            <>\r\n                            <Form.Group id=\"type\">\r\n                                <Form.Label className=\"d-block m-auto\" >Pet's Type</Form.Label>\r\n                                <ToggleButtonGroup\r\n                                    type=\"radio\"\r\n                                    name=\"types\"\r\n                                    // onChange={(event) => handleBasicSearch(event)}\r\n                                >\r\n                                    <ToggleButton value={1}>cat</ToggleButton>\r\n                                    <ToggleButton value={2}>dog</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Form.Group>\r\n                            <SearchResults pets = {searchedPets}/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Form.Group id=\"pet's-Name\">\r\n                                    <Form.Label>Pet's Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, name: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"type\">\r\n                                    <Form.Label>Pet's Type</Form.Label>\r\n                                    <ToggleButtonGroup\r\n                                        type=\"radio\"\r\n                                        name=\"types\"\r\n                                        onChange={(event) => handleTypeChange(event)}\r\n                                    >\r\n                                        <ToggleButton value={1}>cat</ToggleButton>\r\n                                        <ToggleButton value={2}>dog</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"status\">\r\n                                    <Form.Label> Adoption Status</Form.Label><br />\r\n                                    <ToggleButtonGroup\r\n                                        type=\"radio\"\r\n                                        name=\"types\"\r\n                                        onChange={(event) => handleStatusChange(event)}\r\n                                    >\r\n                                        <ToggleButton value={1}>Fostered</ToggleButton>\r\n                                        <ToggleButton value={2}>Owned</ToggleButton>\r\n                                        <ToggleButton value={3}>Sheltered</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"height\">\r\n                                    <Form.Label>Height</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"Height\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, height: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"weight\">\r\n                                    <Form.Label>Weight</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"weight\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, weight: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\">Search</Button>\r\n                            </>\r\n                        }\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            show ten results of pet cards\r\n            {/* {console.log(type)} */}\r\n            <h2 className=\"text-center mb-4\">Search Results</h2>\r\n            \r\n        </>\r\n    );\r\n}","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\admin.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",[],["87","88"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-results.js",["89","90"],"import React from \"react\"\r\n// import UserContext from \"../context/context\"\r\nimport { Button, Card, } from \"react-bootstrap\";\r\n// import PetPage from \"./pet-page\";\r\n\r\nfunction SearchResults(props) {\r\n\r\n    // const userContext = useContext(UserContext)\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center mb-4\">Search Results</h2>\r\n            {/* {props.pets.map(pet => {\r\n                return (\r\n                    <div key={Math.random()}>\r\n                        <Card className=\"align-items-center justify-content-center bg-transparent\">\r\n                            <Card.Body>\r\n                                <Card.Img src=\"../images\" alt=\"image of the pet\" />\r\n                                <Card.Title>{pet.name}</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">{pet.status}</Card.Subtitle>\r\n                                <Button variant=\"primary\">See More</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })} */}\r\n        </>\r\n    )\r\n}\r\nexport default SearchResults","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"91","replacedBy":"97"},{"ruleId":"93","replacedBy":"98"},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"93","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":8,"column":12,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"107","line":8,"column":21,"nodeType":"105","messageId":"106","endLine":8,"endColumn":31},{"ruleId":"103","severity":1,"message":"108","line":9,"column":26,"nodeType":"105","messageId":"106","endLine":9,"endColumn":41},{"ruleId":"91","replacedBy":"109"},{"ruleId":"93","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":3,"column":10,"nodeType":"105","messageId":"106","endLine":3,"endColumn":16},{"ruleId":"103","severity":1,"message":"112","line":3,"column":18,"nodeType":"105","messageId":"106","endLine":3,"endColumn":22},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],["113"],["114"],["113"],["114"],["113"],["114"],"no-unused-vars","'allPets' is assigned a value but never used.","Identifier","unusedVar","'setAllPets' is assigned a value but never used.","'setSearchedPets' is assigned a value but never used.",["113"],["114"],"'Button' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]