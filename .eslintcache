[{"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"1","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"2","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"3","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"4","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js":"5","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"6","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js":"7","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"8","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js":"9","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"10","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js":"11","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"12","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js":"13","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js":"14","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js":"15","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"16","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"17","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"18","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"19"},{"size":2973,"mtime":1624538872394,"results":"20","hashOfConfig":"21"},{"size":7644,"mtime":1624442181838,"results":"22","hashOfConfig":"21"},{"size":87,"mtime":1624461559830,"results":"23","hashOfConfig":"21"},{"size":2313,"mtime":1624784265791,"results":"24","hashOfConfig":"21"},{"size":1061,"mtime":1624474435892,"results":"25","hashOfConfig":"21"},{"size":9044,"mtime":1624797691273,"results":"26","hashOfConfig":"21"},{"size":4918,"mtime":1624470013024,"results":"27","hashOfConfig":"21"},{"size":4432,"mtime":1624445804956,"results":"28","hashOfConfig":"21"},{"size":309,"mtime":1624469047816,"results":"29","hashOfConfig":"21"},{"size":5967,"mtime":1624470095588,"results":"30","hashOfConfig":"21"},{"size":9471,"mtime":1624797708930,"results":"31","hashOfConfig":"21"},{"size":3023,"mtime":1624783379115,"results":"32","hashOfConfig":"21"},{"size":2346,"mtime":1624473607911,"results":"33","hashOfConfig":"21"},{"size":1980,"mtime":1624798809024,"results":"34","hashOfConfig":"21"},{"size":1773,"mtime":1624474312949,"results":"35","hashOfConfig":"21"},{"size":6323,"mtime":1624783174995,"results":"36","hashOfConfig":"21"},{"size":2677,"mtime":1624783004477,"results":"37","hashOfConfig":"21"},{"size":1833,"mtime":1624473446348,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1624442162063,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"km5z9e",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",[],["83","84"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js",[],["85","86"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",["87"],"  import React, { useContext, useEffect, useState} from \"react\"\r\nimport {UserContext} from \"../context/context\"\r\nimport { Card, Modal, } from \"react-bootstrap\";\r\nimport { getPetById, getPets } from \"../lib/api\";\r\nimport Pet from \"./pet-card\";\r\n\r\n// check getSavedPets use of savedPets if needed\r\n\r\nfunction MyPetsPage() {\r\n\r\n    const userContext = useContext(UserContext)\r\n    const [savedPets, setSavedPets] = useState([])\r\n    const [usersPets, setUsersPets] = useState([])\r\n    const [isModalOpen, setIsModalOpen] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getAllPets()\r\n        getSavedPets() \r\n    }, [])\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(\"\")\r\n        getSavedPets()\r\n        getAllPets()\r\n    }\r\n\r\n    const getAllPets = async () => {\r\n        const petArray = []\r\n        const pets = await getPets()\r\n        pets.forEach(pet => { if (pet.ownerId === userContext.user._id) petArray.push(pet)})\r\n        setUsersPets(petArray)\r\n    }\r\n\r\n    const getSavedPets = () => {\r\n        const petIDArray = userContext.user.savedPets\r\n        const petArray = []\r\n        setSavedPets(savedPets => [])\r\n        petIDArray.forEach( async (pet) => {\r\n            const savedPet = await getPetById(pet)\r\n            petArray.push(savedPet)\r\n            setSavedPets(savedPets => [...savedPets, savedPet])\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center mb-4\">My Pets</h1>\r\n            <div key={Math.random()}>\r\n                <Card className=\"align-items-center justify-content-center bg-transparent\">\r\n                    <Card.Body>\r\n                        {usersPets.length ?\r\n                            <div>\r\n                                <h2>Owned/Fostered Pets</h2>\r\n                                {usersPets.map(pet => {\r\n                                    return (\r\n                                        <div key={pet._id}>\r\n                                            <div onClick={() => setIsModalOpen(pet._id)}>\r\n                                                <Card.Title>Name: {pet.name}</Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">Type: {pet.type}</Card.Subtitle>\r\n                                                <Card.Img src={pet.image} alt=\"image of the pet\" className=\"rounded w-25 h-25\" />\r\n                                            </div>\r\n                                            <Modal show={isModalOpen === pet._id} onHide={closeModal} >\r\n                                                <Pet pet={pet} />\r\n                                            </Modal>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <h3>You currently don't own any pets</h3>\r\n                        }\r\n                    </Card.Body>\r\n                    <Card.Body>\r\n                        {savedPets.length ?\r\n                            <div>\r\n                                <h2>Saved Pets</h2>\r\n                                {savedPets.map(pet => {\r\n                                    return (\r\n                                        <div key={pet._id}>\r\n                                            <div onClick={() => setIsModalOpen(pet._id)}>\r\n                                                <Card.Title>Name: {pet.name}</Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">Type: {pet.type}</Card.Subtitle>\r\n                                                <Card.Img src={pet.image} alt=\"image of the pet\" className=\"rounded w-25 h-25\" />\r\n                                            </div>\r\n                                            <Modal show={isModalOpen === pet._id} onHide={closeModal} >\r\n                                                <Pet pet={pet} />\r\n                                            </Modal>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <h3>You currently don't have any pets saved</h3>\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default MyPetsPage","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js",[],["88","89"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js",["90","91"],"import { Modal } from \"react-bootstrap\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport UserModal from \"./userModal\"\r\nimport { getPetById, getPets } from \"../lib/api\"\r\n\r\n\r\n// check getSavedPets use of savedPets if needed\r\n\r\nconst User = ({ user }) => {\r\n    \r\n    const [savedPets, setSavedPets] = useState([])\r\n    const [usersPets, setUsersPets] = useState([])\r\n\r\n    useEffect(() => {\r\n        getAllPets()\r\n        getSavedPets()\r\n    }, [user])\r\n\r\n    const getAllPets = async () => {\r\n        const petArray = []\r\n        const pets = await getPets()\r\n        pets.forEach(pet => { if (pet.ownerId === user._id) { petArray.push(pet) }})\r\n        setUsersPets(petArray)\r\n    }\r\n\r\n    const getSavedPets = () => {\r\n        const petIDArray = user.savedPets\r\n        const petArray = []\r\n        setSavedPets(savedPets => [])\r\n        petIDArray.forEach(async (pet) => {\r\n            const savedPet = await getPetById(pet)\r\n            petArray.push(savedPet)\r\n            setSavedPets(savedPets => [...savedPets, savedPet])\r\n        })\r\n    }\r\n\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n\r\n    const openModal = () => { setIsModalOpen(true) }\r\n    const closeModal = () => { setIsModalOpen(false) }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center mb-4\" onClick={() => { openModal()}}>\r\n                {user.firstName} {user.lastName}\r\n                {user.admin ?\r\n                    <span> - Admin</span>\r\n                    :\r\n                    <span> - Owner</span>\r\n                }\r\n            </h2>\r\n            <Modal show={isModalOpen} onHide={closeModal}>\r\n                <UserModal user={user} pets={usersPets} savedPets={savedPets} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default User","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":19,"column":8,"nodeType":"100","endLine":19,"endColumn":10,"suggestions":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":17,"nodeType":"106","messageId":"107","endLine":1,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":17,"column":8,"nodeType":"100","endLine":17,"endColumn":14,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllPets' and 'getSavedPets'. Either include them or remove the dependency array.","ArrayExpression",["111"],["109"],["110"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["112"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [getAllPets, getSavedPets]",{"range":"117","text":"118"},"Update the dependencies array to be: [getAllPets, getSavedPets, user]",{"range":"119","text":"120"},[604,606],"[getAllPets, getSavedPets]",[462,468],"[getAllPets, getSavedPets, user]"]