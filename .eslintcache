[{"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"1","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"2","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"3","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"4","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js":"5","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"6","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js":"7","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"8","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js":"9","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"10","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js":"11","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"12","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js":"13","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js":"14","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js":"15","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"16","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"17","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"18","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"19"},{"size":3029,"mtime":1624397709378,"results":"20","hashOfConfig":"21"},{"size":7644,"mtime":1624303564102,"results":"22","hashOfConfig":"21"},{"size":342,"mtime":1623586015351,"results":"23","hashOfConfig":"21"},{"size":2346,"mtime":1624310042636,"results":"24","hashOfConfig":"21"},{"size":379,"mtime":1624306772829,"results":"25","hashOfConfig":"21"},{"size":8729,"mtime":1624185549333,"results":"26","hashOfConfig":"21"},{"size":5198,"mtime":1624396805642,"results":"27","hashOfConfig":"21"},{"size":4405,"mtime":1624348405078,"results":"28","hashOfConfig":"21"},{"size":302,"mtime":1610225690999,"results":"29","hashOfConfig":"21"},{"size":6134,"mtime":1624168179607,"results":"30","hashOfConfig":"21"},{"size":9545,"mtime":1624397552220,"results":"31","hashOfConfig":"21"},{"size":2678,"mtime":1624397644688,"results":"32","hashOfConfig":"21"},{"size":2348,"mtime":1624397248678,"results":"33","hashOfConfig":"21"},{"size":999,"mtime":1624396452401,"results":"34","hashOfConfig":"21"},{"size":1788,"mtime":1624397380842,"results":"35","hashOfConfig":"21"},{"size":6575,"mtime":1623605799564,"results":"36","hashOfConfig":"21"},{"size":2735,"mtime":1624347544370,"results":"37","hashOfConfig":"21"},{"size":1509,"mtime":1624396856335,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1607975660008,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"km5z9e",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",["83","84","85"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",[],["86","87"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",[],["88","89"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",[],["90","91"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js",["92"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",["93"],"  import React, { useContext, useEffect, useState} from \"react\"\r\nimport {UserContext} from \"../context/context\"\r\nimport { Card, Modal, } from \"react-bootstrap\";\r\nimport { getPetById, getPets } from \"../lib/api\";\r\nimport Pet from \"./pet-card\";\r\n\r\nfunction MyPetsPage() {\r\n\r\n    const userContext = useContext(UserContext)\r\n    const [savedPets, setSavedPets] = useState([])\r\n    const [usersPets, setUsersPets] = useState([])\r\n    const [isModalOpen, setIsModalOpen] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        getAllPets()\r\n        getSavedPets() \r\n    }, [])\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(\"\")\r\n        getSavedPets()\r\n        getAllPets()\r\n    }\r\n\r\n    const getAllPets = async () => {\r\n        const petArray = []\r\n        const pets = await getPets()\r\n        pets.forEach(pet => {\r\n            if (pet.ownerId === userContext.user._id) {petArray.push(pet)}\r\n        })\r\n        setUsersPets(petArray)\r\n    }\r\n\r\n    const getSavedPets = () => {\r\n        const petIDArray = userContext.user.savedPets\r\n        const petArray = []\r\n        setSavedPets(savedPets => [])\r\n        petIDArray.forEach( async (pet) => {\r\n            const savedPet = await getPetById(pet)\r\n            petArray.push(savedPet)\r\n            setSavedPets(savedPets => [...savedPets, savedPet])\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center mb-4\">My Pets</h1>\r\n            <div key={Math.random()}>\r\n                <Card className=\"align-items-center justify-content-center bg-transparent\">\r\n                    <Card.Body>\r\n                        {usersPets.length ?\r\n                            <div>\r\n                                <h2>Owned/Fostered Pets</h2>\r\n                                {usersPets.map(pet => {\r\n                                    return (\r\n                                        <div key={pet._id}>\r\n                                            <div onClick={() => setIsModalOpen(pet._id)}>\r\n                                                <Card.Title>Name: {pet.name}</Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">Type: {pet.type}</Card.Subtitle>\r\n                                                <Card.Img src={pet.image} alt=\"image of the pet\" className=\"rounded w-25 h-25\" />\r\n                                            </div>\r\n                                            <Modal show={isModalOpen === pet._id} onHide={closeModal} >\r\n                                                <Pet pet={pet} />\r\n                                            </Modal>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <h3>You currently don't own any pets</h3>\r\n                        }\r\n                    </Card.Body>\r\n                    <Card.Body>\r\n                        {savedPets.length ?\r\n                            <div>\r\n                                <h2>Saved Pets</h2>\r\n                                {savedPets.map(pet => {\r\n                                    return (\r\n                                        <div key={pet._id}>\r\n                                            <div onClick={() => setIsModalOpen(pet._id)}>\r\n                                                <Card.Title>Name: {pet.name}</Card.Title>\r\n                                                <Card.Subtitle className=\"mb-2 text-muted\">Type: {pet.type}</Card.Subtitle>\r\n                                                <Card.Img src={pet.image} alt=\"image of the pet\" className=\"rounded w-25 h-25\" />\r\n                                            </div>\r\n                                            <Modal show={isModalOpen === pet._id} onHide={closeModal} >\r\n                                                <Pet pet={pet} />\r\n                                            </Modal>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </div>\r\n                            :\r\n                            <h3>You currently don't have any pets saved</h3>\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default MyPetsPage","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js",["94"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",["95"],"import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport { postUser } from \"../lib/api\";\r\nimport { UserContext } from '../context/context'\r\n\r\nexport default function Signup({ closeSignupModal }) {\r\n    \r\n    const userContext = useContext(UserContext)\r\n\r\n    const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [signupData, setSignupData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        tel: \"\",\r\n        bio: \"\",\r\n        admin: false,\r\n        pets: [],\r\n        login: true\r\n    });\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (signupData.password === confirmationPassword) {\r\n            const response = await postUser('http://localhost:5000/api/users/signup',signupData)\r\n            // console.log(signupData)\r\n            if (typeof response === \"string\") {\r\n                // console.log(response);\r\n                setError(`${response}`)\r\n            }\r\n            else {\r\n                // console.log(\"no Error\", response);\r\n                setSignupData({ firstName: \"\", lastName: \"\", password: \"\", email: \"\", tel: \"\", bio: \"\", admin: false, pets: [], login: true })\r\n                setConfirmationPassword(\"\")\r\n                userContext.user = response\r\n                setError(\"\")\r\n                closeSignupModal()\r\n            }\r\n        }\r\n        else {\r\n            setError(\"passwords do not match\")\r\n            // console.log(\"passwords do not match\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Title className=\"text-center mb-4\">Sign Up</Card.Title>\r\n                <Card.Body>\r\n                    <Form\r\n                        className=\"bg-light\"\r\n                        onSubmit={(event) => handleOnSubmit(event)}\r\n                        action=\"signup\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <Form.Group id=\"first-name\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, firstName: event.target.value })}\r\n                                value={signupData.firstName}\r\n                                required\r\n                                name=\"first name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"last-name\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, lastName: event.target.value })}\r\n                                value={signupData.lastName}\r\n                                required\r\n                                name=\"last name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phone-number\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Phone Number\"\r\n                                onChange={(event) => setSignupData({ ...signupData, tel: event.target.value })}\r\n                                value={signupData.tel}\r\n                                required\r\n                                name=\"tel\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={(event) => setSignupData({ ...signupData, email: event.target.value })}\r\n                                value={signupData.email}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"user-bio\">\r\n                            <Form.Label>Your Story</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"tell us about your self...\"\r\n                                onChange={(event) => setSignupData({ ...signupData, bio: event.target.value })}\r\n                                value={signupData.bio}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setSignupData({ ...signupData, password: event.target.value })}\r\n                                value={signupData.password}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setConfirmationPassword(event.target.value)}\r\n                                value={confirmationPassword}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <div className=\"text-danger bg-warning rounded my-2\">{error}</div>\r\n                        <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],{"ruleId":"96","severity":1,"message":"97","line":7,"column":56,"nodeType":"98","messageId":"99","endLine":7,"endColumn":66},{"ruleId":"96","severity":1,"message":"100","line":10,"column":29,"nodeType":"98","messageId":"99","endLine":10,"endColumn":38},{"ruleId":"96","severity":1,"message":"101","line":16,"column":10,"nodeType":"98","messageId":"99","endLine":16,"endColumn":15},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":75,"column":72,"nodeType":"112","endLine":75,"endColumn":88},{"ruleId":"113","severity":1,"message":"114","line":17,"column":8,"nodeType":"115","endLine":17,"endColumn":10,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"114","line":16,"column":8,"nodeType":"115","endLine":16,"endColumn":14,"suggestions":"117"},{"ruleId":"96","severity":1,"message":"118","line":1,"column":29,"nodeType":"98","messageId":"99","endLine":1,"endColumn":35},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'state' is assigned a value but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],["119"],["120"],["119"],["120"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAllPets' and 'getSavedPets'. Either include them or remove the dependency array.","ArrayExpression",["121"],["122"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [getAllPets, getSavedPets]",{"range":"127","text":"128"},"Update the dependencies array to be: [getAllPets, getSavedPets, user]",{"range":"129","text":"130"},[562,564],"[getAllPets, getSavedPets]",[437,443],"[getAllPets, getSavedPets, user]"]