[{"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"1","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"2","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"3","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"4","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"5","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"6","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"7","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"8","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"9","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"10","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"11","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"12","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-results.js":"13","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-page.js":"14","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js":"15","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js":"16"},{"size":2123,"mtime":1609866415974,"results":"17","hashOfConfig":"18"},{"size":5768,"mtime":1609867792777,"results":"19","hashOfConfig":"18"},{"size":2209,"mtime":1609886101757,"results":"20","hashOfConfig":"18"},{"size":5983,"mtime":1609867568606,"results":"21","hashOfConfig":"18"},{"size":1347,"mtime":1608497584845,"results":"22","hashOfConfig":"18"},{"size":308,"mtime":1609865669256,"results":"23","hashOfConfig":"18"},{"size":2968,"mtime":1609889111859,"results":"24","hashOfConfig":"18"},{"size":7197,"mtime":1609612782810,"results":"25","hashOfConfig":"18"},{"size":2815,"mtime":1609617777614,"results":"26","hashOfConfig":"18"},{"size":4745,"mtime":1609889153582,"results":"27","hashOfConfig":"18"},{"size":9221,"mtime":1609889051465,"results":"28","hashOfConfig":"18"},{"size":375,"mtime":1607975660008,"results":"29","hashOfConfig":"18"},{"size":1134,"mtime":1609081375559,"results":"30","hashOfConfig":"18"},{"size":1913,"mtime":1609888379875,"results":"31","hashOfConfig":"18"},{"size":186,"mtime":1609617941812,"results":"32","hashOfConfig":"18"},{"size":185,"mtime":1609617935781,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"nc3qmk",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",["72"],"import Login from \"./login\"\r\nimport Signup from \"./signup\"\r\nimport UserContext from \"../context/context\"\r\nimport React, { useContext, useState, useEffect } from \"react\"\r\nimport { Modal } from \"react-bootstrap\"\r\n\r\nfunction Homepage() {\r\n\r\n    const userContext = useContext(UserContext)\r\n    const [isLoginOpen, setIsLoginOpen] = useState(false);\r\n    const [isSignupOpen, setIsSignupOpen] = useState(false);\r\n\r\n    const openLoginModal = () => {\r\n        setIsLoginOpen(true)\r\n    }\r\n\r\n    const closeLoginModal = () => {\r\n        setIsLoginOpen(false)\r\n    }\r\n\r\n    const openSignupModal = () => {\r\n        setIsSignupOpen(true)\r\n    }\r\n\r\n    const closeSignupModal = () => {\r\n        setIsSignupOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {userContext.login ?\r\n                <div>\r\n                    <h1>Welcome to the pet adoption website! {userContext.firstName} {userContext.lastName}</h1>\r\n                    <h2>what would you like to do today?</h2>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <h1>Welcome to the pet adoption website!</h1>\r\n                    <h2>Here, in our pet adoption website, we offer the very first step to get to know your new best friend</h2>\r\n                    <div>\r\n                        <p>if you already have an account</p>\r\n                        <span>please <button onClick={openLoginModal}>Login</button> here</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <p>if you are not currently registered</p>\r\n                        <span>you are welcome to <button onClick={openSignupModal}>Signup</button> here</span>\r\n                    </div>\r\n                    <br />\r\n                    <Modal show={isSignupOpen} onHide={closeSignupModal}>\r\n                        <Signup />\r\n                    </Modal>\r\n                    <Modal show={isLoginOpen} onHide={closeLoginModal}>\r\n                        <Login />\r\n                    </Modal>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Homepage","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",["73"],"import UserContext from \"../context/context\"\r\nimport { Form, Button, Card} from \"react-bootstrap\";\r\nimport React, { useContext, useState } from \"react\"\r\nimport { updateUserById, getUsers } from \"../lib/api\";\r\n\r\n\r\nfunction ProfileSettings() {\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n    const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n    const [profileData, setProfileData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        tel: \"\",\r\n        bio: \"\",\r\n    });\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (profileData.password === confirmationPassword) {\r\n            // Ensure that if the email is being changed itâ€™s not already in use\r\n            // Be sure not to save the users password as a plain string. (bcrypt is a great tool for this) -X\r\n            let newUserInfo = {}\r\n            for (const property in profileData) {if (profileData[property] !== \"\") { newUserInfo[property] = profileData[property]}}\r\n            console.log(userContext._id);\r\n            updateUserById(userContext._id, newUserInfo)\r\n            setConfirmationPassword(\"\")\r\n            setProfileData({ firstName: \"\", lastName: \"\", password: \"\", email: \"\", tel: \"\", bio: \"\"})\r\n        }\r\n        else { console.log(\"passwords do not match\"); }\r\n    };\r\n\r\n    return (\r\n        <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n            <Card.Body>\r\n                <h2 className=\"text-center mb-4\">Profile Settings</h2>\r\n                <Form\r\n                    className=\"bg-light\"\r\n                    onSubmit={(event) => handleOnSubmit(event)}\r\n                    method=\"post\"\r\n                    encType=\"multipart/form-data\"\r\n                >\r\n                    <Form.Group id=\"first-name\">\r\n                        <Form.Label>New First Name</Form.Label>\r\n                        <Form.Control\r\n                            placeholder={userContext.firstName}\r\n                            type=\"text\"\r\n                            onChange={(event) => setProfileData({ ...profileData, firstName: event.target.value })}\r\n                            value={profileData.firstName}\r\n                            name=\"first name\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"last-name\">\r\n                        <Form.Label>New Last Name</Form.Label>\r\n                        <Form.Control\r\n                            placeholder={userContext.lastName}\r\n                            type=\"text\"\r\n                            onChange={(event) => setProfileData({ ...profileData, lastName: event.target.value })}\r\n                            value={profileData.lastName}\r\n                            name=\"last name\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"tel\">\r\n                        <Form.Label>New Phone Number</Form.Label>\r\n                        <Form.Control\r\n                            placeholder={userContext.tel}\r\n                            type=\"tel\"\r\n                            onChange={(event) => setProfileData({ ...profileData, tel: event.target.value })}\r\n                            value={profileData.tel}\r\n                            name=\"tel\"\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>New Email</Form.Label>\r\n                        <Form.Control\r\n                            placeholder={userContext.email}\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            onChange={(event) => setProfileData({ ...profileData, email: event.target.value })}\r\n                            value={profileData.email}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>New Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(event) => setProfileData({ ...profileData, password: event.target.value })}\r\n                            value={profileData.password}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>New Password Confirmation</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            onChange={(event) => setConfirmationPassword(event.target.value)}\r\n                            value={confirmationPassword}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"bio\">\r\n                        <Form.Label>Wanna tell us something new about yourself?</Form.Label>\r\n                        <Form.Control\r\n                            placeholder={userContext.bio}\r\n                            as=\"textarea\"\r\n                            rows={3}\r\n                            onChange={(event) => setProfileData({ ...profileData, bio: event.target.value })}\r\n                            value={profileData.bio}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button className=\"w-100\" type=\"submit\">\r\n                        save changes\r\n                    </Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\nexport default ProfileSettings","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, Form, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\"\r\nimport { getPets } from \"../lib/api\";\r\nimport SearchResults from \"./search-results\"\r\n\r\n\r\nexport default function Search() {\r\n\r\n    // const [allPets, setAllPets] = useState({})\r\n    const [searchedPets, setSearchedPets] = useState([])\r\n    const [searchTypeBasic, setSearchTypeBasic] = useState(true);\r\n    const [searchData, setSearchData] = useState({})\r\n    // const [type, setType] = useState(\"dogs\")\r\n\r\n    // const handleBasicSearch = () => {\r\n    //     all\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getPets().then((response) => {\r\n            console.log(response, \"getPets\");\r\n        })\r\n        // return () => {cleanup}\r\n    }, [])\r\n    \r\n    const handleTypeChange = (event) => {\r\n        if (event === 1) { setSearchData({ ...searchData, type: \"cat\" }) }\r\n        else { setSearchData({ ...searchData, type: \"dog\" }) }\r\n    };\r\n\r\n    const handleStatusChange = (event) => {\r\n        if (event === 1) { setSearchData({ ...searchData, status: \"fostered\" }) }\r\n        else if (event === 2) { setSearchData({ ...searchData, status: \"owned\" }) }\r\n        else { setSearchData({ ...searchData, status: \"sheltered\" }) }\r\n    };\r\n\r\n    // const handleAdvancedSearch = (event) => {\r\n    //     event.preventDefault();\r\n    //     let advancedPetArray = []\r\n    //     allPets.forEach((pet) => {\r\n    //         for (const value in searchData) {\r\n    //             for (const prop in pet) {\r\n    //                 if (pet[prop] === searchData && !advancedPetArray.includes(pet))\r\n    //                 { advancedPetArray.push(pet) }\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     setSearchedPets(advancedPetArray)\r\n    //     console.log(advancedPetArray)\r\n    //     console.log(searchedPets)\r\n    //     setSearchData({ name: \"\", type: \"\", height: 0, weight: 0, status: \"\" })\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Search Page</h2>\r\n                    <Form\r\n                        className=\"bg-light\"\r\n                    // onSubmit={(event) => handleAdvancedSearch(event)}\r\n                    >\r\n                        <Button\r\n                            className=\"d-block m-auto\"\r\n                            onClick={() => setSearchTypeBasic(!searchTypeBasic)}\r\n                        >\r\n                            {!searchTypeBasic ? \"Basic\" : \"Advanced\"}\r\n                        </Button>\r\n                        Results of search (List of animal card components that link to the pet page)\r\n                        <Card.Title>{searchTypeBasic ? \"Basic\" : \"Advanced\"} Search Form:</Card.Title>\r\n                        {searchTypeBasic ?\r\n                            <>\r\n                            <Form.Group id=\"type\">\r\n                                <Form.Label className=\"d-block m-auto\" >Pet's Type</Form.Label>\r\n                                <ToggleButtonGroup\r\n                                    type=\"radio\"\r\n                                    name=\"types\"\r\n                                    // onChange={(event) => handleBasicSearch(event)}\r\n                                >\r\n                                    <ToggleButton value={1}>cat</ToggleButton>\r\n                                    <ToggleButton value={2}>dog</ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                            </Form.Group>\r\n                            <SearchResults pets = {searchedPets}/>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <Form.Group id=\"pet's-Name\">\r\n                                    <Form.Label>Pet's Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Name\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, name: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"type\">\r\n                                    <Form.Label>Pet's Type</Form.Label>\r\n                                    <ToggleButtonGroup\r\n                                        type=\"radio\"\r\n                                        name=\"types\"\r\n                                        onChange={(event) => handleTypeChange(event)}\r\n                                    >\r\n                                        <ToggleButton value={1}>cat</ToggleButton>\r\n                                        <ToggleButton value={2}>dog</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"status\">\r\n                                    <Form.Label> Adoption Status</Form.Label><br />\r\n                                    <ToggleButtonGroup\r\n                                        type=\"radio\"\r\n                                        name=\"types\"\r\n                                        onChange={(event) => handleStatusChange(event)}\r\n                                    >\r\n                                        <ToggleButton value={1}>Fostered</ToggleButton>\r\n                                        <ToggleButton value={2}>Owned</ToggleButton>\r\n                                        <ToggleButton value={3}>Sheltered</ToggleButton>\r\n                                    </ToggleButtonGroup>\r\n                                </Form.Group>\r\n                                <Form.Group id=\"height\">\r\n                                    <Form.Label>Height</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"Height\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, height: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group id=\"weight\">\r\n                                    <Form.Label>Weight</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"number\"\r\n                                        placeholder=\"weight\"\r\n                                        onChange={(event) => setSearchData({ ...searchData, weight: event.target.value })}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Button type=\"submit\">Search</Button>\r\n                            </>\r\n                        }\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n            show ten results of pet cards\r\n            {/* {console.log(type)} */}\r\n            <h2 className=\"text-center mb-4\">Search Results</h2>\r\n            \r\n        </>\r\n    );\r\n}",["75","76"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",[],["77","78"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",["79"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-results.js",["80","81"],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-page.js",["82"],"import { Button, Card, ListGroup } from \"react-bootstrap\"\r\nimport React from \"react\"\r\n\r\nfunction PetPage(petoo) {\r\n\r\n    let pet = JSON.parse(window.localStorage.getItem('newPet'))\r\n    console.log(pet);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center mb-4\">{pet.name} the {pet.type} details:</h2>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Body>\r\n                    <Card.Title>{pet.name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{pet.type}</Card.Subtitle>\r\n                    <Card.Img src={pet.image} alt=\"image of the pet\" />\r\n                    <Card.Text>{pet.breed}</Card.Text>\r\n                    <Card.Text>{pet.status}</Card.Text>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>{pet.height}CM</ListGroup.Item>\r\n                        <ListGroup.Item>{pet.weight}KG</ListGroup.Item>\r\n                        <ListGroup.Item>{pet.color}</ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Card.Text>{pet.bio}</Card.Text>\r\n                    {/* find a way to present weather yes or no */}\r\n                    <Card.Text>{pet.hypoallergenic && \"hypoallergenic\"}</Card.Text>\r\n                    <Card.Text>dietary restrictions: {pet.dietaryRestrictions}</Card.Text>\r\n                    {/* {pet.status === \"owned\" && <><Button variant=\"danger\">return the pet</Button></>}\r\n                    {pet.status === \"fostered\" && <><Button variant=\"info\">adopt the pet</Button></>}\r\n                    {!pet.status && <><Button variant=\"primary\">foster the pet</Button>\r\n                        <Button variant=\"primary\">adopt the pet</Button></>}\r\n                    <br /><Button>save for later</Button> */}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default PetPage","C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js",[],"C:\\Users\\User\\Desktop\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js",[],{"ruleId":"83","severity":1,"message":"84","line":4,"column":39,"nodeType":"85","messageId":"86","endLine":4,"endColumn":48},{"ruleId":"83","severity":1,"message":"87","line":4,"column":26,"nodeType":"85","messageId":"86","endLine":4,"endColumn":34},{"ruleId":"83","severity":1,"message":"88","line":10,"column":26,"nodeType":"85","messageId":"86","endLine":10,"endColumn":41},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"83","severity":1,"message":"95","line":8,"column":20,"nodeType":"85","messageId":"86","endLine":8,"endColumn":29},{"ruleId":"83","severity":1,"message":"96","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":16},{"ruleId":"83","severity":1,"message":"97","line":3,"column":18,"nodeType":"85","messageId":"86","endLine":3,"endColumn":22},{"ruleId":"83","severity":1,"message":"96","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getUsers' is defined but never used.","'setSearchedPets' is assigned a value but never used.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"'setNewPet' is assigned a value but never used.","'Button' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]