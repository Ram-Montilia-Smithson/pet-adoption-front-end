[{"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js":"1","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js":"2","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js":"3","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js":"4","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js":"5","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js":"6","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js":"7","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js":"8","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js":"9","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js":"10","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js":"11","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js":"12","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js":"13","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js":"14","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js":"15","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js":"16","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js":"17","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js":"18","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js":"19"},{"size":3293,"mtime":1623607119420,"results":"20","hashOfConfig":"21"},{"size":7099,"mtime":1615992134837,"results":"22","hashOfConfig":"21"},{"size":342,"mtime":1623586015351,"results":"23","hashOfConfig":"21"},{"size":2455,"mtime":1623605955526,"results":"24","hashOfConfig":"21"},{"size":374,"mtime":1623259287234,"results":"25","hashOfConfig":"21"},{"size":8763,"mtime":1623259287232,"results":"26","hashOfConfig":"21"},{"size":3853,"mtime":1623259287235,"results":"27","hashOfConfig":"21"},{"size":2767,"mtime":1623230248515,"results":"28","hashOfConfig":"21"},{"size":302,"mtime":1610225690999,"results":"29","hashOfConfig":"21"},{"size":6092,"mtime":1623778009048,"results":"30","hashOfConfig":"21"},{"size":47,"mtime":1610227833738,"results":"31","hashOfConfig":"21"},{"size":3070,"mtime":1623689735332,"results":"32","hashOfConfig":"21"},{"size":1677,"mtime":1623259287236,"results":"33","hashOfConfig":"21"},{"size":406,"mtime":1623259287233,"results":"34","hashOfConfig":"21"},{"size":1290,"mtime":1623259287236,"results":"35","hashOfConfig":"21"},{"size":6575,"mtime":1623605799564,"results":"36","hashOfConfig":"21"},{"size":2735,"mtime":1623605764353,"results":"37","hashOfConfig":"21"},{"size":1481,"mtime":1623149549060,"results":"38","hashOfConfig":"21"},{"size":375,"mtime":1607975660008,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"km5z9e",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\App.js",["86","87","88","89","90","91"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\search-page.js",[],["92","93"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\context\\context.js",[],["94","95"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\home-page.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allUsers.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\addPet.js",[],["96","97"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\pet-card.js",["98"],"import { Card, Button } from \"react-bootstrap\"\r\nimport React, { useContext } from \"react\"\r\nimport {UserContext} from \"../context/context\";\r\nimport { updatePetById, updateUserById } from \"../lib/api\"\r\n\r\n// save for later\r\n\r\nfunction Pet({pet}) {\r\n\r\n    console.log(pet);\r\n\r\n    const userContext = useContext(UserContext)\r\n\r\n    const handleReturn = () => {\r\n        updatePetById(`http://localhost:5000/api/pets/return/${pet._id}`)\r\n    }\r\n\r\n    const handleFoster = () => {\r\n        updatePetById(`http://localhost:5000/api/pets/foster/${pet._id}`,{ user: userContext._id })\r\n    }\r\n\r\n    const handleAdopt = () => {\r\n        updatePetById(`http://localhost:5000/api/pets/adopt/${pet._id}`,{ user: userContext._id })\r\n    }\r\n\r\n    const handleSave = () => {\r\n        updateUserById(`http://localhost:5000/api/users/save/${userContext._id}`,{ savedPets: [...userContext.savedPets, pet._id] })\r\n    }\r\n    const handleUnSave = () => {\r\n        const index = userContext.savedPets.indexOf(pet._id)\r\n        userContext.savedPets.splice(index,1)\r\n        updateUserById(`http://localhost:5000/api/users/save/${userContext._id}`,{ savedPets: [...userContext.savedPets]})\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"text-center mb-4\">{pet.name} the {pet.type} details:</h2>\r\n            <Card\r\n                className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Body>\r\n                    <Card.Title>Name: {pet.name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">Type: {pet.type}</Card.Subtitle>\r\n                    <Card.Img src={pet.image} alt=\"image of the pet\" alt={pet.name} className=\"rounded w-25 h-25\"/>\r\n                    <Card.Text>Breed: {pet.breed}</Card.Text>\r\n                    <Card.Text>Status: {pet.status}</Card.Text>\r\n                    <Card.Text>Height: {pet.height}CM</Card.Text>\r\n                    <Card.Text>Weight: {pet.weight}KG</Card.Text>\r\n                    <Card.Text>Color: {pet.color}</Card.Text>\r\n                    <Card.Text>Bio: {pet.bio}</Card.Text>\r\n                    <Card.Text>{pet.hypoallergenic && \"hypoallergenic\"}</Card.Text>\r\n                    <Card.Text>dietary restrictions: {pet.dietaryRestrictions}</Card.Text>\r\n                </Card.Body>\r\n                {userContext.login && <>\r\n                    {pet.status === \"Available\" ?\r\n                    <>\r\n                        <Button className=\"btn btn-primary\" onClick={handleAdopt}>Adopt pet</Button>\r\n                        <Button className=\"btn btn-warning\" onClick={handleFoster}>Foster pet</Button>\r\n                    </>\r\n                        :    \r\n                    null    \r\n                    }\r\n                    {pet.status === \"Fostered\" ?\r\n                    <>\r\n                        <Button className=\"btn btn-primary\" onClick={handleAdopt}>Adopt pet</Button>\r\n                        <Button className=\"btn btn-danger\" onClick={handleReturn}>Return pet</Button>\r\n                    </>\r\n                        :\r\n                    null\r\n                    }\r\n                    {pet.status === \"Adopted\" ?\r\n                        <Button className=\"btn btn-danger\" onClick={handleReturn}>Return pet</Button>\r\n                        :\r\n                    null\r\n                    }\r\n                    {userContext.savedPets.includes(pet._id) ? \r\n                        <Button className=\"btn btn-dark\" onClick={handleUnSave}>Unsave Pet</Button>\r\n                        :\r\n                        <Button className=\"btn btn-success\" onClick={handleSave}>Save Pet</Button>\r\n                    }\r\n                    {/* {userContext.admin && <Card.Link href={`/edit-pet/${pet._id}`}>Edit Pet</Card.Link>} */}\r\n                </>}\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Pet",["99","100"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\my-pets-page.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\index.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\profile-settings.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\edit-pet.js",[],["101","102"],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\lib\\api.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\userModal.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\allPets.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\user.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\signup.js",["103"],"import React, { useContext, useRef, useState } from \"react\";\r\nimport { Form, Button, Card } from \"react-bootstrap\"\r\nimport { postUser } from \"../lib/api\";\r\nimport { UserContext } from '../context/context'\r\n\r\nexport default function Signup({ closeSignupModal }) {\r\n    \r\n    const userContext = useContext(UserContext)\r\n\r\n    const [confirmationPassword, setConfirmationPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const [signupData, setSignupData] = useState({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        tel: \"\",\r\n        bio: \"\",\r\n        admin: false,\r\n        pets: [],\r\n        login: true\r\n    });\r\n\r\n    const handleOnSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (signupData.password === confirmationPassword) {\r\n            const response = await postUser('http://localhost:5000/api/users/signup',signupData)\r\n            // console.log(signupData)\r\n            if (typeof response === \"string\") {\r\n                // console.log(response);\r\n                setError(`${response}`)\r\n            }\r\n            else {\r\n                // console.log(\"no Error\", response);\r\n                setSignupData({ firstName: \"\", lastName: \"\", password: \"\", email: \"\", tel: \"\", bio: \"\", admin: false, pets: [], login: true })\r\n                setConfirmationPassword(\"\")\r\n                userContext.user = response\r\n                setError(\"\")\r\n                closeSignupModal()\r\n            }\r\n        }\r\n        else {\r\n            setError(\"passwords do not match\")\r\n            // console.log(\"passwords do not match\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"d-flex align-items-center justify-content-center bg-transparent\">\r\n                <Card.Title className=\"text-center mb-4\">Sign Up</Card.Title>\r\n                <Card.Body>\r\n                    <Form\r\n                        className=\"bg-light\"\r\n                        onSubmit={(event) => handleOnSubmit(event)}\r\n                        action=\"signup\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                    >\r\n                        <Form.Group id=\"first-name\">\r\n                            <Form.Label>First Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"First Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, firstName: event.target.value })}\r\n                                value={signupData.firstName}\r\n                                required\r\n                                name=\"first name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"last-name\">\r\n                            <Form.Label>Last Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Last Name\"\r\n                                onChange={(event) => setSignupData({ ...signupData, lastName: event.target.value })}\r\n                                value={signupData.lastName}\r\n                                required\r\n                                name=\"last name\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"phone-number\">\r\n                            <Form.Label>Phone Number</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Phone Number\"\r\n                                onChange={(event) => setSignupData({ ...signupData, tel: event.target.value })}\r\n                                value={signupData.tel}\r\n                                required\r\n                                name=\"tel\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                onChange={(event) => setSignupData({ ...signupData, email: event.target.value })}\r\n                                value={signupData.email}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"user-bio\">\r\n                            <Form.Label>Your Story</Form.Label>\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                rows={3}\r\n                                placeholder=\"tell us about your self...\"\r\n                                onChange={(event) => setSignupData({ ...signupData, bio: event.target.value })}\r\n                                value={signupData.bio}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setSignupData({ ...signupData, password: event.target.value })}\r\n                                value={signupData.password}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password-confirm\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => setConfirmationPassword(event.target.value)}\r\n                                value={confirmationPassword}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <div className=\"text-danger bg-warning rounded my-2\">{error}</div>\r\n                        <Button className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                    </Form>\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\login.js",[],"H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\components\\dashboard.js",["104"],"import {BrowserRouter as Router, Route, Switch, Link} from \"react-router-dom\"\r\nimport { Navbar } from \"react-bootstrap\"\r\nimport React, {useEffect} from \"react\"\r\nimport Pets from \"./allPets\"\r\nimport Users from \"./allUsers\"\r\n\r\n// get the users and the pets from context\r\n\r\nfunction Dashboard() {\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-center mb-4 mt-5\">Dashboard</h1>\r\n            <Router>\r\n                <Navbar className=\"bg-dark mx-5 rounded\">\r\n                    <Link to=\"/admin/dashboard/users\">Users</Link>\r\n                    <Link to=\"/admin/dashboard/pets\">Pets</Link>\r\n                </Navbar>\r\n                <Switch>\r\n                    <Route path=\"/admin/dashboard/users\">\r\n                        <Users/>\r\n                        <p>List of all the users in the database(pet owners and administrators)\r\n                        Clicking on a user should display all the pets that the user owns along with all of\r\n                        their profile details so the administrators can contact the user.</p>\r\n                    </Route>\r\n                    <Route path=\"/admin/dashboard/pets\">\r\n                        <p>List of all pets and ability to go to the pet page and edit. (The edit should be just like adding a pet but with the details already displayed there)</p>\r\n                        <Pets/>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\nexport default Dashboard","H:\\Ram\\fullstack\\backend-projects\\projects\\pet-adoption-front-end-Ram-Montilia-Smithson\\src\\reportWebVitals.js",[],{"ruleId":"105","severity":1,"message":"106","line":7,"column":56,"nodeType":"107","messageId":"108","endLine":7,"endColumn":66},{"ruleId":"105","severity":1,"message":"109","line":10,"column":29,"nodeType":"107","messageId":"108","endLine":10,"endColumn":38},{"ruleId":"105","severity":1,"message":"110","line":11,"column":8,"nodeType":"107","messageId":"108","endLine":11,"endColumn":15},{"ruleId":"105","severity":1,"message":"111","line":12,"column":10,"nodeType":"107","messageId":"108","endLine":12,"endColumn":17},{"ruleId":"105","severity":1,"message":"112","line":12,"column":19,"nodeType":"107","messageId":"108","endLine":12,"endColumn":27},{"ruleId":"105","severity":1,"message":"113","line":20,"column":10,"nodeType":"107","messageId":"108","endLine":20,"endColumn":15},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"114","replacedBy":"120"},{"ruleId":"116","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":43,"column":70,"nodeType":"124","endLine":43,"endColumn":84},{"ruleId":"114","replacedBy":"125"},{"ruleId":"116","replacedBy":"126"},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},{"ruleId":"105","severity":1,"message":"129","line":1,"column":29,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"109","line":3,"column":16,"nodeType":"107","messageId":"108","endLine":3,"endColumn":25},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'EditPet' is defined but never used.","'getPets' is defined but never used.","'getUsers' is defined but never used.","'state' is assigned a value but never used.","no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],["130"],["131"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["130"],["131"],["130"],["131"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]